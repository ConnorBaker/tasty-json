name: Build and Test

on:
  - push
  - pull_request
  - workflow_dispatch

defaults:
  run:
    shell: bash

jobs:
  # TODO: Add a linting/formatting job to run in parallel
  develop:
    # Develop caches the latest development environment for us
    name: develop
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up nix
        uses: ./.github/actions/setup
        with:
          REPO_AUTH_TOKEN: ${{ secrets.REPO_AUTH_TOKEN }}

      - uses: cachix/cachix-action@v10
        with:
          name: haskell-library-tasty-json
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Build development environment
        run: nix -L develop --profile dev-profile

      - name: Cache development environment
        run: cachix --verbose push --omit-deriver --compression-level 9 haskell-library-tasty-json ./dev-profile

  build-and-test:
    name: build-and-test
    runs-on: ubuntu-latest
    needs: develop
    steps:
      - uses: actions/checkout@v3

      - name: Set up nix
        uses: ./.github/actions/setup
        with:
          REPO_AUTH_TOKEN: ${{ secrets.REPO_AUTH_TOKEN }}

      - uses: cachix/cachix-action@v10
        with:
          name: haskell-library-tasty-json
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      # Build
      - name: Build library tasty-json-reporter
        run: nix -L build .#tasty-json-reporter

      - name: Cache library tasty-json-reporter
        run: cachix --verbose push --omit-deriver --compression-level 9 haskell-library-tasty-json ./result

      - name: Build library tasty-json-reporter-test
        run: nix -L build .#tasty-json-reporter-test

      - name: Cache test suite tasty-json-reporter-test
        run: cachix --verbose push --omit-deriver --compression-level 9 haskell-library-tasty-json ./result

      # Test
      - name: Run tasty-json-reporter-test
        run: |
          nix -L develop --command -- cabal run tasty-json-reporter-test -- --json-path out.json --markdown-path out.md;
          echo '# Job Summary\n' >> $GITHUB_STEP_SUMMARY;
          cat out.md >> $GITHUB_STEP_SUMMARY;
          cat out.json | jq;
          [[ $(cat out.json | jq .success) = "true" ]]
